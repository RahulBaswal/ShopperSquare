spring.datasource.url=jdbc:postgresql://ec2-34-230-198-12.compute-1.amazonaws.com:5432/dcbksb61njrqdi
spring.datasource.username=hgbzlpiricnbdb
spring.datasource.password=2c08e01c59350c101df5b1e47b4ebcb84a8ed97667bdbcb83513388d632b72b3

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQL82Dialect
spring.jpa.hibernate.ddl-auto=create

server.port=8080

#Oauth2 configure   
spring.security.oauth2.client.registration.google.client-id= 878817625661-3et25evgqu82ljc9e7ee1um3pba2hpf0.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret= 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

#paytm - I don't have merchant account so that's why not implementing it!!
# paytm.payment.sandbox.merchantId:
# paytm.payment.sandbox.merchantKey: 
# paytm.payment.sandbox.channelId:WEB
# paytm.payment.sandbox.industryTypeId:Retail
# paytm.payment.sandbox.website:WEBSTAGING
# paytm.payment.sandbox.paytmUrl:https://securegw-stage.paytm.in/order/process
# paytm.payment.sandbox.callbackUrl:http://localhost:8080/pgresponse
# paytm.payment.sandbox.details.MID: ${paytm.payment.sandbox.merchantId}
# paytm.payment.sandbox.details.CHANNEL_ID: ${paytm.payment.sandbox.channelId}
# paytm.payment.sandbox.details.INDUSTRY_TYPE_ID: ${paytm.payment.sandbox.industryTypeId}
# paytm.payment.sandbox.details.WEBSITE: ${paytm.payment.sandbox.website}
# paytm.payment.sandbox.details.CALLBACK_URL: ${paytm.payment.sandbox.callbackUrl}
# paytm.mobile = 
# paytm.email = 

# to run data.sql script   , '$2a$12$0SHNiDQuluDlpiz7k.ifYelQ22c/r7ZdSYhh8y7TZtqvwOBOXKse2', 'Admin', 'Admin'
spring.datasource.initialization-mode=always
